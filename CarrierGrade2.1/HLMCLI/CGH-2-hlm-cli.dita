<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" >
<topic xml:lang="en-us" id="topic10581c2hc">
  <title>HPE Helion <tm tmtype="reg">OpenStack</tm> Carrier Grade 2.1: Lifecycle Manager
    CLI</title>
  <prolog>
    <metadata>
      <othermeta name="layout" content="default"/>
      <othermeta name="product-version" content="HPE Helion OpenStack Carreir Grade 1.1"/>
      <othermeta name="role" content="Storage Administrator"/>
      <othermeta name="role" content="Storage Architect"/>
      <othermeta name="role" content="Michael B"/>
      <othermeta name="product-version1" content="HPE Helion OpenStack Carreir Grade 1.1"/>
    </metadata>
  </prolog>
  <body>
    <p>The Helion lifecycle management tool contains a command line interface (CLI) that runs as a
      service on the lifecycle manager host. To list available commands supported by that service, type
      <codeph>hlm</codeph> on the terminal window on lifecycle manager host.</p>
    <p>You can get more help about a command using the <codeph>--help</codeph> parameter:</p>
    <pre> hlm &lt;command name&gt; --help</pre>
    <p><b>Note:</b> All logs will be generated as <codeph>/var/log/hlm/&lt;cloud name>/&lt;command
        name></codeph>.log</p>
    <p>This topic lists the available commands, describes the options, and how to use the commands
      to carry out particular functionality:</p>
    <p><b>Note: </b>Please refer to the description in code block corresponding to each command.</p>
    <section>
      <title>hlm define</title>
      <p>Defines a cloud. </p>
      <p>Use this command to deploy a cloud defined by the specified template. This command lists
        all the available deployment templates. The command creates a
          <codeph>&lt;cloudname></codeph> folder in the <codeph>/var/hlm/clouds
        directory</codeph>.</p>
      <p><b>Synopsis</b></p>
      <p>
        <codeblock>hlm define &lt;cloud name> -t &lt;topology name>
hlm define -l </codeblock>
      </p>
      <p><b>Arguments</b></p>
      <p><codeph>&lt;cloud name&gt;</codeph> -- Name the cloud <codeph>--topology, -t</codeph> --
        Specify the template to use.</p>
      <p><b>Optional Arguments</b></p>
      <p><codeph>--list-topologies, -l</codeph> -- List cloud topologies.</p>
      <p><b>Example:</b></p>
      <p>
        <codeblock>hlm define mycloud -t memphis</codeblock>
      </p>
    </section>
    <section>
      <title>hlm-deploy</title>
      <p>Deploys all cloud services on respective cloud nodes. </p>
      <p>This command is for a first-time commit of the cloud configuration. Attempting to deploy an
        already deployed cloud will return an error. </p>
      <p><b>Synopsis</b></p>
      <p>
        <codeblock>hlm deploy -c &lt;cloud name> [-v &lt;verbose>] [-r &lt;rerun>] [-t &lt;tags|roles|tiers>]</codeblock>
      </p>
      <p><b>Arguments</b></p>
      <p><codeph>--cloud, -c</codeph> -- Specify the name of the cloud to act upon. </p>
      <p><codeph>--verbose, -v</codeph> -- Produce verbose output. </p>
      <p><codeph>--rerun, -r</codeph> -- Rerun from a failed task.</p>
      <p><codeph>--tags, -t</codeph> -- Run only specified tags separated by a space and included in
        double quotes. </p>
      <p><b>Examples</b></p>
      <p>Deploy the cloud first time <codeblock>hlm deploy -c mycloud </codeblock></p>
      <p>Rerun from previously failed role<codeblock>hlm deploy -c mycloud -r </codeblock></p>
      <p>Deploy specific services
        <codeblock>hlm deploy -c mycloud -t "FND-MDB KEY-API" </codeblock></p>
    </section>
    <section><title>hlm-display</title><p>Displays information about the cloud. If no arguments but
        the cloud name are specified, the topology of the current state is displayed.
          </p><p><b>Synopsis</b></p><p>
        <codeblock>hlm display -c &lt;cloud name> [] [--topology | --explain | --service-map | --network-map | --node-map]  </codeblock>
      </p><p><b>Arguments</b></p><codeph>--cloud, -c</codeph> Specify the name of the cloud to
          display.<p><codeph>--topology</codeph> -- Display the cloud topology. This is the default.
          </p><p><codeph>--explain</codeph> -- Display a text description of the
        cloud.</p><codeph>--service-map</codeph> -- Display the service map file for the cloud.
          <p><codeph>--network-map</codeph> -- Display the network map file for the
        cloud.</p><codeph>--node-map</codeph> -- Display the list of nodes that have been allocated
      in the cloud.<p><b>Examples</b></p><p>Display details about how networks will be provisioned
        in the cloud: <codeblock>hlm display -c mycloud --network-ma</codeblock></p></section>
    <section><title>hlm-dump</title><p>Gathers all log files generated as part of the lifecycle
        process and compresses them in a single TAR file in the current location or on a location
        that is specified, using the same name as the cloud:
        <codeph>&lt;cloudname.tar></codeph>.</p><p><b>Synopsis</b></p><p>
        <codeblock>hlm dump -c &lt;cloud name> [-p &lt;dump location>]</codeblock>
      </p><p><b>Arguments</b></p><p><codeph>--cloud, -c</codeph> -- Specify the name of the cloud to
        act upon. </p><p><codeph>--path, -p</codeph> -- Specify the path to create tar
          file.</p><p><b>Examples</b></p>Create a log dump file in the current directory:
      <codeblock>hlm dump -c mycloud</codeblock>Create a log dump file in a different directory :
      <codeblock>hlm dump -c mycloud -p /home/cghelion </codeblock></section>
    <section>
      <title>hlm-generate</title>
      <p>Execute the configuration processor that generates cloud configuration files needed for
        cloud deployment. The HPE Helion OpenStack Carrier Grade configuration processor is a script, called
          <codeph>hcfgproc</codeph>, that is incorporated into the installation environment. This
        command generates the necessary configuration for the cloud. </p>
      <p><b>Synopsis</b></p>
      <p>
        <codeblock>hlm generate -c &lt;cloud name> [-C &lt;cloud | service | component>] [-p &lt;control plane>] [-v]</codeblock>
      </p>
      <p><b>Arguments</b></p>
      <p><codeph> --cloud, -c</codeph> -- Specify the name of the cloud to act upon. </p>
      <p><codeph>--change-credential, -C</codeph> -- Change the credentials for the entire cloud,
        all components for a service, or a single component. </p>
      <p><codeph>--control-plane, -p</codeph> -- Limit the scope of credential change to components
        of a single control plane. </p>
      <p><codeph>--verbose, -v</codeph> -- Produce verbose output.</p>
      <p><b>Example</b></p>
      <p>
        <codeblock>hlm generate -c mycloud</codeblock>
      </p>
    </section>
    <section><title>hlm-list</title>Lists the clouds that are currently
        defined.<p><b>Synopsis</b></p><p>
        <codeblock>hlm list</codeblock>
      </p><p><b>Examples</b></p><p>
        <codeblock>hlm list</codeblock>
      </p></section>
    <section><title>hlm-netinit</title>Configures network interfaces on cloud nodes. <p>Network
        interface files along with NIC bonding or PCI enumeration related files (generated by the
        configuration processor) are copied to cloud nodes. After the interfaces are configured, the
        command restarts the network service on cloud nodes to reflect the
          changes.</p><p><b>Synopsis</b></p><p>
        <codeblock>hlm netinit -c &lt;cloud name> [-v]</codeblock>
      </p><p><b>Arguments</b></p><p><codeph>--cloud, -c</codeph> -- Specify the name of the cloud to
        act upon. </p><p><codeph>--verbose, -v</codeph> -- Produce verbose
          output.</p><p><b>Example</b></p><p>
        <codeblock>hlm netinit -c mycloud</codeblock>
      </p></section>
    <section>
      <title>hlm plugin</title>
      <p>Deploys a plugin on top of an existing cloud deployment. </p>
      <p><b>Examples</b></p>
      <p>Deploy the Infoblox plugin
        <codeblock>hlm plugin -c &lt;cloudname> -n infoblox</codeblock>Rollback a plugin that was
        already
        deployed<codeblock>hlm plugin -c &lt;cloudname> -n infoblox --rollback</codeblock></p>
      <p/>
    </section>
    <section><title>hlm provision</title><p>Provision nodes to be used in a cloud. </p><p>Before
        executing the command, edit the <codeph>node-provision.json</codeph> file in the
          <codeph>&lt;cloudname></codeph> directory of the HLM VM for an existing cloud. This
        command provisions/installs the operation system on the servers specified in the
          <codeph>node-provision.json</codeph> file. See the <xref
          href="../Installation/carrier-grade-install-overview.dita#topic1925cgio">installation
          documentation</xref> for your deployment.</p><b>Synopsis</b>
      <codeblock>hlm provision -c &lt;cloud name> [-n &lt;"node1 node2">] [-d &lt;"node1 node2">] [-p]</codeblock><p><b>Arguments</b></p><p><codeph>--cloud,
          -c</codeph> -- Specify the name of the cloud to provision. </p><p><codeph>--nodes,
          -n</codeph> -- Indicate that specified nodes will be provisioned to the specified cloud.
          </p><p><codeph>--deprovision, -d</codeph> -- Indicate that specified nodes will be
        released from the specified cloud. </p><p><codeph>--proxy, -p</codeph> -- Indicate that only
        proxy nodes will be provisioned to the specified cloud.</p><p><b>Optional
          Arguments</b></p><p><codeph>--list-topologies, -l</codeph> -- List cloud
          topologies.</p><p><b>Examples:</b></p><p>Provsion all nodes: </p><p>
        <codeblock>hlm provision -c mycloud</codeblock>
      </p>Provision specific/new nodes specified in node-provision.json: <p>
        <codeblock>hlm provision -c mycloud -n "ccn4 ccn5"</codeblock>
      </p>Deprovision specific
        nodes:<p><codeblock>hlm provision -c mycloud -d "ccn4 ccn5"</codeblock>Provision only proxy
        nodes:</p><codeblock> hlm provision -c mycloud -p</codeblock></section>
    <section>
      <title>hlm-start</title>
      <p>Start a particular service or start all services. The command starts services on a
        particular tier or on all tiers.</p>
      <p><b>Synopsis</b></p>
      <p>
        <codeblock>hlm start -c &lt;cloud name&gt; [-v &lt;verbose&gt;] [-t &lt;tags|roles|tiers&gt;] </codeblock>
      </p>
      <p><b>Arguments</b>
      </p>
      <p><codeph>--cloud, -c</codeph> -- Specify the name of the cloud to act upon. </p>
      <p><codeph>--verbose, -v</codeph> -- Produce verbose output. </p>
      <p><codeph>--tags, -t</codeph>  --Run only specified tags separated by a space and included in
        double quotes.</p>
      <p><codeph>role</codeph> is the role name associated with the service, from the following
        table </p>
      
      <table id="role">
        <title id="table-title">Service to Role Name Mapping</title>
        <tgroup cols="2">
          <colspec colnum="1" colname="col1"/>
          <colspec colnum="2" colname="col2"/>
          <thead>
            <row>
              <entry>Service Name</entry>
              <entry>
                <p>Role Name</p>
                <p>(used with hlm start/stop command)</p>
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>keystone</entry>
              <entry>KEY-API </entry>
            </row>
            <row>
              <entry>mysql</entry>
              <entry>FND-MDB</entry>
            </row>
            <row>
              <entry>rabbitmq</entry>
              <entry>FND-RMQ</entry>
            </row>
            <row>
              <entry>glance</entry>
              <entry>GLA-API</entry>
            </row>
            <row>
              <entry>swift_container</entry>
              <entry>SWF-CON</entry>
            </row>
            <row>
              <entry>swift_object</entry>
              <entry>SWF-OBJ</entry>
            </row>
            <row>
              <entry>swift_proxy</entry>
              <entry>SWF-PRX</entry>
            </row>
            <row>
              <entry>swift_account</entry>
              <entry>SWF-ACC</entry>
            </row>
            <row>
              <entry>logstash</entry>
              <entry>ELK-LOG</entry>
            </row>
            <row>
              <entry>attis</entry>
              <entry>ATTIS</entry>
            </row>
            <row>
              <entry>ntp</entry>
              <entry>NTP-CLI</entry>
            </row>
            <row>
              <entry>apache</entry>
              <entry>FND-AP2</entry>
            </row>
            <row>
              <entry>elastic_search</entry>
              <entry>ELK-SCH</entry>
            </row>
            <row>
              <entry>beaver</entry>
              <entry>BVR-LOG</entry>
            </row>
            <row>
              <entry>kibana</entry>
              <entry>ELK-KIB</entry>
            </row>
            <row>
              <entry>cinder</entry>
              <entry>CND-SVC</entry>
            </row>
            <row>
              <entry>icinga_service</entry>
              <entry>IC2-SVC</entry>
            </row>
            <row>
              <entry>icinga_web</entry>
              <entry>IC2-WEB</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <p><b>Examples</b></p>
      <p>Start the Horizon service on all control planes:
        <codeblock>hlm start -c mycloud -t "HZN-WEB"</codeblock></p>
      <p>Start all services on all control planes:<codeblock>hlm start -c mycloud</codeblock></p>
    </section>
    <section>
      <title>hlm-stop</title>
      <p>Stop a particular service or stop all services. The command stops services on a particular
        tier or on all tiers.</p>
      <p><b>Synopsis</b></p>
      <p>
        <codeblock>hlm stop -c &lt;cloud name&gt; [-v &lt;verbose&gt;] [-t &lt;tags|roles|tiers&gt;] </codeblock>
      </p>
      <p><b>Arguments</b>
      </p>
      <p><codeph>--cloud, -c</codeph> -- Specify the name of the cloud to act upon. </p>
      <p><codeph>--verbose, -v</codeph> -- Produce verbose output. </p>
      <p><codeph>--tags, -t</codeph>  --Run only specified tags separated by a space and included in
        double quotes.</p>
      <p><b>Examples</b></p>
      <p>Stop the Horizon service on all control planes:
        <codeblock>hlm start -c mycloud -t "HZN-WEB"</codeblock></p>
      <p>Stop all services on all control planes:<codeblock>hlm start -c mycloud</codeblock></p>
    </section>
    
    
          </body>
</topic>
