<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" >
<topic xml:lang="en-us" id="topic10581c2up">
    <title>HP Helion <tm tmtype="reg">OpenStack</tm> Carrier Grade 2.0: Patching and Update
        Process</title>
    <prolog>
        <metadata>
            <othermeta name="layout" content="default"/>
            <othermeta name="product-version" content="HP Helion OpenStack Carreir Grade 1.1"/>
            <othermeta name="role" content="Storage Administrator"/>
            <othermeta name="role" content="Storage Architect"/>
            <othermeta name="role" content="Michael B"/>
            <othermeta name="product-version1" content="HP Helion OpenStack Carreir Grade 1.1"/>
        </metadata>
    </prolog>
    <body>
        <p>This document provides a general description of the HP Helion OpenStack Carrier Grade
            patching and update processes.
            <!--https://wiki.hpcloud.net/pages/viewpage.action?pageId=56139004--></p>
        <p>Update Existing lifecycle manager:</p>
        <p>If you have an existing lifecycle manager and you want to upgrade it to a newer build, you can do
            so without tearing it apart.</p>
        <p>This will help you to maintain all your existing cloud definitions and generated
            configuration remain intact while the Debian Repository and lifecycle manager code has been updated to
            the latest version.</p>
        <p><b>Taking Back-Up and Preparing for Upgrade</b></p>
        <p>
            <ol id="ol_r4c_tcp_f5">
                <li>
                    <pre>Take a backup of desired_state under your current cloud folder ==&gt; If you have any custom machine_architecture.json =&gt; ensure you have a backup for this file ==&gt; /opt/share/hlm/1/site/machine_architecture.json</pre>
                    <ol id="ol_s4c_tcp_f5">
                        <li>
                            <pre>cd /var/hlm/clouds/&lt;cloudname&gt; </pre>
                        </li>
                        <li>
                            <pre>cp -r desired_state desired_state-working-beta</pre>
                        </li>
                    </ol>
                </li>
                <li>
                    <pre>Take a backup of log files  mv  /var/log/hlm/&lt;cloudname&gt; /var/log/hlm/&lt;cloudname&gt;-backup</pre>
                </li>
                <li>
                    <pre>Do not rename the cloud</pre>
                </li>
                <li>
                    <pre>Ensure accelerate process is not running under "root" user on any of the cloud nodes.  If you do find such process - kill it</pre>
                </li>
                <li>
                    <pre>Reconcile any differences between Json files of the new build and the one that you have under cloud folder. Since you will be using the same jsons of the under your current cloud folder, you must ensure that if there were any new additions/subtractions into the new build's jsons</pre>
                </li>
            </ol>
        </p>
        <p><b>Confirm health of existing cloud</b></p>
        <p>
            <ol id="ol_vmg_5cp_f5">
                <li>
                    <pre>MySQL</pre>
                    <ol id="ol_wmg_5cp_f5">
                        <li>
                            <pre>service MySQL status (should be active)</pre>
                        </li>
                        <li>
                            <pre>mysql</pre>
                        </li>
                        <li>
                            <pre>show status like 'wsrep%';</pre>
                        </li>
                        <li>
                            <pre>corfirm above command returned a wsrep_cluster_size that is appropriate for the build</pre>
                        </li>
                    </ol>
                </li>
                <li>
                    <pre>RabbitMQ</pre>
                    <ol id="ol_xmg_5cp_f5">
                        <li>
                            <pre>service rabbitmq-server status (should be active)</pre>
                        </li>
                        <li>
                            <pre>rabbitmqctl status</pre>
                        </li>
                        <li>
                            <pre>rabbitmqctl cluster_status</pre>
                            <ol id="ol_ymg_5cp_f5">
                                <li>
                                    <pre>should list all nodes in cluster under 'running_nodes'</pre>
                                </li>
                            </ol>
                        </li>
                        <li>
                            <pre>rabbitctl list_users</pre>
                            <ol id="ol_zmg_5cp_f5">
                                <li>
                                    <pre>should list all users</pre>
                                </li>
                            </ol>
                        </li>
                    </ol>
                </li>
                <li>
                    <pre>Apache</pre>
                    <ol id="ol_ang_5cp_f5">
                        <li>
                            <pre>service apache2 status (should be active)</pre>
                        </li>
                    </ol>
                </li>
                <li>
                    <pre>keystone</pre>
                    <ol id="ol_bng_5cp_f5">
                        <li>
                            <pre>source stackrc</pre>
                        </li>
                        <li>
                            <pre>keystone user-list (should return list of users)</pre>
                        </li>
                    </ol>
                </li>
                <li>
                    <pre>Take a general inventory of all your existing networks, instances, subnets etc to compare your setup post upgrade.</pre>
                </li>
            </ol>
        </p>
        <p><b>Gotchas!</b></p>
        <p>
            <ol id="ol_lxn_vcp_f5">
                <li>
                    <pre>If you get hung while running deploy, Kill the ansible process by pressing "ctrl c" and then try hlm deploy with rerun option</pre>
                </li>
                <li>
                    <pre>On bonded nic setups, sometimes there are network lags and you might get timeouts or failures or ssh disconnect issue. Running hlm deploy with rerun usually solves the issue.</pre>
                </li>
                <li>
                    <pre>Ensure the machine_architecture.json that you backed up is copied again under /opt/share/hlm/1/site/</pre>
                </li>
            </ol>
        </p>
        <p><b>Upgrade Existing lifecycle manager with New Build</b></p>
        <p>
            <ol id="ol_dbm_wcp_f5">
                <li>
                    <pre>Remove old bits from ~/cg/  on lifecycle manager host</pre>
                </li>
                <li>
                    <pre>Copy the new build bits  cg-hos-misc.tar.gz  cg-hos-src.tar.gz under ~/cg/ on lifecycle manager host</pre>
                </li>
                <li>
                    <pre>Do not update your  ~/infra-ansible-playbooks unless you know for sure the new bits have some code changes to infra-ansible-playbooks. Usually the change list is generated with each build.</pre>
                </li>
                <li>
                    <pre>Go to your ~/infra-ansible-playbooks folder. If you updated the infra playbooks too with new code, then update your group_vars/all file accordingly.</pre>
                </li>
                <li>
                    <pre>Run ansible-playbook -i hosts update_hlm_onBM.yml</pre>
                </li>
                <li>
                    <pre>The above step has updated your lifecycle manager debian repo with latest deb and also has updated your lifecycle manager and Ansible code.</pre>
                </li>
            </ol>
        </p>
        <p><b>Upgrade Cloud Configuration with Existing Cloud Definitions (No JSON Changes in the
                cloud definition for adding tiers or nodes. But adding variables is fine.)</b></p>
        <p>Once you have updated your lifecycle manager to be on the latest version of the build, you still
            have your existing cloud configurations (sitting under desired_state folder) </p>
        <p>that has not been updated to the newercode.</p>
        <p>You will have to perform some steps in order to get your existing cloud definitions
            updated to the latest. </p>
        <p>If you are not interested in your existing cloud definition and updating the existing
            cloud itself from the current lifecycle manager, you can of course ignore these steps and create a new
            cloud altogether.</p>
        <p><b>Update Cloud Configuration with Existing Cloud Definition (No JSON file
            Changes)</b></p>
        <p>
            <ol id="ol_btc_zcp_f5">
                <li>
                    <pre>Since you have a deployed cloud, you already have the cloud definition and configuration sitting under /var/hlm/clouds/&lt;yourcloud&gt;</pre>
                </li>
                <li>
                    <pre>In this case, we are NOT modifying any Cloud Definition JSON files. We are only updating the cloud configuration related to ansible roles and varibles.</pre>
                </li>
                <li>
                    <pre>Take a backup of your old configurations for "just in case" scenarios. </pre>
                </li>
                <li>
                    <pre>Run copy command =&gt;  cp /var/hlm/clouds/&lt;yourcloud&gt;/desired_state /var/hlm/clouds/&lt;yourcloud&gt;/desired_state_build&lt;oldbuild&gt;</pre>
                </li>
                <li>
                    <pre>Run =&gt; cd ~</pre>
                </li>
                <li>
                    <pre>Run =&gt; hlm generate -c &lt;yourcloud&gt;</pre>
                </li>
                <li>
                    <pre>Run =&gt; hlm deploy -c &lt;yourcloud&gt;</pre>
                </li>
                <li>
                    <pre>The above will update your whole cloud to the new bits  </pre>
                </li>
            </ol>
        </p>
        <p><b>Update Cloud Configuration with NEW Cloud Definitions (JSON Changes for adding tiers)
                [NOT FOR GA]</b></p>
        <p>Since you have a deployed cloud, you already have the cloud definition and configuration
            sitting under /var/hlm/clouds/&lt;yourcloud> </p>
        <p>Following things cannot be updated in JSON files:</p>
        <p>
            <ul id="ul_h23_2dp_f5">
                <li>No changes pertaining to networking, new networks cannot be added or old
                    networks cannot be removed</li>
                <li>No changes pertaining to removal of existing tiers</li>
                <li>No changes pertaining to removal of existing roles on tiers </li>
            </ul>
        </p>
        <p>In this case, we can modify the Cloud Definition JSON files but are limited to modify
            only following things:</p>
        <p>
            <ul id="ul_rvb_fdp_f5">
                <li>Add new roles to existing Tier (See an expandable sections below for steps)</li>
                <li>Add new Ansible variables</li>
                <li>Add a new Tier</li>
            </ul>
        </p>
    </body>
</topic>
