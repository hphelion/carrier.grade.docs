<?xml version="1.0" encoding="UTF-8"?>
  <!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" >
<topic xml:lang="en-us" id="topic10581c2id">
  <title>HP Helion <tm tmtype="reg">OpenStack</tm> Carrier Grade 2.1 Alpha: Step 4 - Deploying the Denver
    Template</title>
  <prolog>
    <metadata>
      <othermeta name="layout" content="default"/>
      <othermeta name="product-version" content="HP Helion OpenStack Carrier Grade 2.0"/>
      <othermeta name="role" content="Storage Administrator"/>
      <othermeta name="role" content="Storage Architect"/>
      <othermeta name="role" content="Michael B"/>
      <othermeta name="product-version1" content="HP Helion OpenStack Carrier Grade 2.0"/>
    </metadata>
  </prolog>
  <body>
    <p>After the lifecycle manager is installed, the next task in installing the <xref
        href="../carrier-grade-install-overview.dita#topic1925cgio/install-option">KVM
        topology</xref> is to deploy the HP Helion OpenStack cloud.</p>
    <p>If you are installing the <codeph>denver</codeph> template, which includes the KVM region and
      uses AVS networking, follow these instructions. If you are installing a different deployment,
      disregard these instructions. </p>
    <section conref="../sacramento/CGH-2-install-sacramento.dita#topic10581c2is/conref-hos-install"/>
    <section id="conref-provision">
      <title>Provision the new cloud</title>
      <ol id="ol_kwm_c1k_zt">
        <li>Execute the following command to provision and configure the HPE Helion OpenStack cloud.
            <codeblock>hlm define -t denver &lt;cloudname&gt; -t rcp</codeblock><p>Where::
              <codeph>&lt;cloudname></codeph> is the name of the cloud to create.</p><p
            conref="../sacramento/CGH-2-install-sacramento.dita#topic10581c2is/cloudname"/><p>The
            command creates the <codeph>/var/hlm/clouds/&lt;cloudname></codeph> directory, which
            contains several JSON template files. </p></li>
      </ol>
    </section>
    <section>
      <title>Configuring JSON files</title>
    </section>
    <section id="jsons">The HP Helion OpenStack deployment requires several JSON
          files.<p><b>Important:</b> Do not store backup of the JSON files inside your cloud
        directory or any where inside the <codeph>/var/hlm/clouds</codeph> directory. You can create
        a backup folder on <codeph>/root/</codeph> directory or on a remote system.
        <!--HCG-681--></p></section>
    <section id="node-prov">
      <title>Edit the node-provision.json file</title>
      <p>Modify the <codeph>node-provision.json</codeph> file in the
          <codeph>/var/hlm/clouds/&lt;cloudname></codeph> directory of the lifecycle manager. This
        file supplies input values to the hprovision script, later in the installation.</p>
      <p>Edit the <codeph>node-provision.json</codeph> file to change only the following
          fields:<table id="table_ycw_qrn_xs">
          <tgroup cols="2">
            <colspec colname="col1" colsep="1" rowsep="1"/>
            <colspec colname="col2" colsep="1" rowsep="1"/>
            <thead>
              <row>
                <entry colsep="1" rowsep="1">Field</entry>
                <entry colsep="1" rowsep="1">Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Pxe-mac-address</entry>
                <entry>MAC address of the interface you want to PXE boot onto. This is not same as
                  iLO MAC address.</entry>
              </row>
              <row>
                <entry>pm_ip</entry>
                <entry>Power management IP (iLO ip)</entry>
              </row>
              <row>
                <entry>pm_user</entry>
                <entry>Power management user (iLO username)</entry>
              </row>
              <row>
                <entry>pm_pass</entry>
                <entry>Power management password (iLO password)</entry>
              </row>
              <row>
                <entry>failure_zone, vendor, model, os_partition_size, data_partition_size</entry>
                <entry>Enter the same value as for these fields an in the
                    <codeph>nodes.json</codeph> file used during cloud deployment</entry>
              </row>
            </tbody>
          </tgroup>
        </table></p>
      <p>Click here to see a <xref
          href="../json/carrier-grade-install-kvm-only-json.dita#topic10581cgikoj">sample
          node-provision.json file</xref>. </p>
    </section>
    <section conref="../sacramento/CGH-2-install-sacramento.dita#topic10581c2is/conref-pxe-boot"/>
    <section id="environment">
      <title id="env-json">Edit the environment.json file</title>
      <p>Modify the <codeph>environment.json</codeph> file in the
          <codeph>/var/hlm/clouds/&lt;cloudname></codeph> directory of the lifecycle manager.
        Configure the VLANs and network addresses as appropriate for your environment. Set the
        following for the CLM, CAN, and BLS
        network:<codeblock>"cidr": 
          "start-address": </codeblock> The three controller
        nodes should have CLM, CAN, EXT, BLS on eth0 and TUL on eth1.
        <!--Hiding for RC0 
              <p>The two compute nodes should have CLM, EXT, BLS on eth0 and TUL on eth1.</p>
           -->
      </p>
      <p>
        <b>Example:</b>
      </p>
      <p>In the following example, the IP addresses have been masked for security: </p>
      <p><codeblock>{
    "product": {
        "version": 1
    },

    "node-type": [
        {
            "name": "CCN",
            "interface-map": [
                {
                    "name": "INTF0",
                    "ethernet-port-map": {
                        "interface-ports": [ "eth1" ]
                    },
                    "logical-network-map": [
                        {
                            "name": "CLM",
                            "type": "vlan",
                            "segment-id": "",
                            "network-address": {
                                "cidr": "10.207.x.x/24",
                                "start-address": "10.207.x.x",
                                "gateway": "10.207.x.x"
                            }
                        }
                    ]
		  },
		  {
                    "name": "INTF1",
                    "ethernet-port-map": {
                        "interface-ports": [ "eth2" ]
                    },
                    "logical-network-map": [
                        {
                            "name": "CAN",
                            "type": "vlan",
                            "segment-id": "",
                            "network-address": {
                                "cidr": "10.207.x.x/24",
                                "start-address": "10.207.x.x",
                                "gateway": "10.207.x.x"
                            }
                        }
		     ]
		  },
		  {
                    "name": "INTF2",
                    "ethernet-port-map": {
                        "interface-ports": [ "eth3" ]
                    },
                    "logical-network-map": [
                        {
                            "name": "BLS",
                            "type": "vlan",
                            "segment-id": "",
                            "network-address": {
                                "cidr": "10.207.x.x/24",
                                "start-address": "10.207.x.x",
                                "gateway": "10.207.x.x"
                            }
                        }
		     ]
                }
            ]
        }
    ]
}
</codeblock>
        <b>NOTE:</b> The configuration processor assigns the first address of the CLM address range
        to itself for serving python and debian repositories. Make sure that you set the first IP
        address of the CLM range for the eth2 (CLM) address of the HLM host.</p>
    </section>
    <section>
      <title>Edit the Inet-control.json file</title>
      <p>Modify the <codeph>Inet-control.json</codeph> file in the
          <codeph>/var/hlm/clouds/&lt;cloudname></codeph> directory of the lifecycle manager.</p>
    </section>
    <section>
      <title>Edit the ansible.json file</title>
      <p>Modify the <codeph>ansible.json</codeph> file in the
          <codeph>/var/hlm/clouds/&lt;cloudname>/vars</codeph> directory of the lifecycle manager.
        Make sure the the DNS and NTP server details in the <codeph>properties</codeph> section are
        correct for your environment. </p>
      <p>In the following example, the IP addresses have been masked for security: </p>
      <p>
        <codeblock>{
    "product": {
        "version": 1
    },

    "property-groups": [
        {
            "name": "ansible-vars",
            "properties": {
                "dns_domain_name": "helion.cg",
                "dns_address": "10.x.x.x",
                "ext_dns_ip": "10.x.x.x",
                "upstream_ntp_servers": [
                    "10.x.x.x",
                    "16.x.x.x",
                    "2.debian.pool.ntp.org"
                ],
                "ssl_cert_file": "ca.crt",
                "ssl_key_file": "cakey.pem",
                "ssl_passphrase": "cghelion"
            }
        }
    ]
}
</codeblock>
      </p>
    </section>
    <section>
      <title>Edit the wr.json file</title>
      <p>Modify the <codeph>wr.json</codeph> file in the
          <codeph>/var/hlm/clouds/&lt;cloudname>/vars/</codeph> directory of the lifecycle manager
        with values appropriate for your environment. Make sure the CLM, BLS and CAN IP addresses in
        the <codeph>network</codeph> section are correct for your environment.</p>
      <p>In the following example, the IP addresses have been masked for security: </p>
      <p>
        <codeblock>{
    "product": {
        "version": 1
    },

    "property-groups": [
        {
            "name": "wr-vars",
            "properties": {
                "database_storage": 50,
                "backup_storage": 300,
                "shared_instance_storage": 250,
                "region_name": "regionone",
                "logical_interface": [
                    {
                        "lag_interface": "N",
                        "lag_mode": 4,
                        "interface_mtu": 1500,
                        "interface_ports": [
                            "eth0"
                        ],
                        "network": [
                            {
                                "ip_start_address": "10.x.x.x",
                                "ip_end_address": "10.x.x.x",
                                "name": "CLM"
                            },
                            {
                                "ip_start_address": "172.x.x.x",
                                "ip_end_address": "172.x.x.x",
                                "name": "BLS"
                            },
                            {
                                "ip_start_address": "10.x.x.x",
                                "ip_end_address": "10.x.x.x",
                                "name": "CAN"
                            }
                        ]
                    }
                ],
                "pxeboot_cidr": "10.x.x.x/24",
             "license_file_name": "license.lic",
                "physnet_VLAN_range_mappings": ["physnet1:1000:1999","physnet2:2000:2020"],
                "pci_vendor_id": ["8086:10ca","8086:10ed"]
            }
        }
    ]
}</codeblock>
      </p>
    </section>
    <section id="verify-json">
      <title>Verify the JSON files</title>
      <p>After editing the JSON files, validate each JSON file to make sure there are no syntax
        errors using the tool of your preference. For example, using the Python json.tool: </p>
      <codeblock>python -m json.tool &lt;filename>.json</codeblock>
    </section>
    <section id="conref-create-cloud">
      <title>Provision the cloud nodes and bring the cloud nodes up</title>
      <ol id="ol_f1b_cmf_zt">
        <li>On the lifecycle manager, use the following script to start the provisioning of the HPE
          Helion OpenStack cloud:
            <codeblock>hlm provision -c &lt;cloudname&gt;          </codeblock><p>Where:
              <codeph>&lt;cloudname></codeph> is the name of the cloud you created. The script takes
            approximately 15 to 30 minutes.</p><image
            href="../../../media/carrier.grade.docs/2.1/carrier-grade-install-provision.png"
            id="image_ogm_cs1_t5" width="600"/><p>This script prepares the servers for the HPE
            Helion OpenStack Carrier Grade cloud installation including the HPE Linux operating system.
            The script also PXE boots the nodes specified in <codeph>node-provision.json</codeph>
            file and tracks the PXE boot completion process. The script also creates the
              <codeph>nodes.json</codeph> file in the directory. </p><p>You can log in to the iLO
            server management tool for each of the nodes to monitor the boot process. Consult your
            iLO documentation for information on how to log into iLO. </p></li>
        <li>Make sure the nodes are booted up using iLO. For example:<p><image
              href="../../../media/CGH-2-install-cobbler.png" width="600" id="image_c5k_d4b_kt"
            /></p><p><b>Note:</b> In rare situations, a node might not boot due to an issue with
            network configuration. If this happens, you need to log into that node and manually boot
            using the Retry Auto-Configuration option. The provisioning will continue as you reboot
            that node. See <xref
              href="../../Troubleshooting/CGH-2-troubleshooting-install.dita#topic10581c2ti/provision"
              >Node fails to boot during HLM provision</xref>. </p>Once the baremetal nodes are
          provisioned, make sure the <codeph>nodes.json</codeph> file is generated to the
            <codeph>var/hlm/clouds/&lt;cloud name&gt;/</codeph> directory. The
            <codeph>nodes.json</codeph> file will have entries for three controllers. </li>
        <li>Verify that each node in the <codeph>nodes.json</codeph> file is installed and active.
            <ol id="ol_g1b_cmf_zt">
            <li>Ping proxy node from lifecycle manager with the IP using IP specified in
                <codeph>nodes.json</codeph> file.</li>
            <li>SSH to the compute proxy node from the lifecycle manager using IP specified in
                <codeph>nodes.json</codeph> file.</li>
          </ol></li>
      </ol>
    </section>
    <section conref="../tahoe/CGH-2-install-tahoe.dita#topic10581c2it/conref-back-end-no-esx"/>
    <section id="conref-config-proc">
      <title>Deploy the HPE Helion OpenStack cloud</title>
      <ol id="ol_bst_mmf_zt">
        <li>Run the HPE Helion OpenStack Carrier Grade configuration processor:
            <codeblock>hlm generate –c &lt;cloudname&gt;</codeblock><p>This command runs the
            configuration processor, a script (<codeph>hcfgproc</codeph>) that is incorporated into
            the installation environment. This command generates the necessary configuration for the
            cloud. </p><p>When the command completes without errors, you will a
              message:</p><p><image
              href="../../../media/carrier.grade.docs/2.1/carrier-grade-install-generate.png"
              width="600" id="image_ah5_ys1_t5"/></p></li>
        <li>Review the CloudDiagram, <codeph>hosts.hf</codeph>, and
            <codeph>/etc/network/interfaces.d/eth.cfg</codeph> files to make sure the network
          settings are correct.</li>
        <li>Initialize network interfaces on all the cloud nodes using the following command:
            <codeblock>hlm netinit –c &lt;cloudname&gt;</codeblock><p>Where:
              <codeph>&lt;cloudname&gt;</codeph> is the name of the cloud you created.</p><p>After
            this command completes, all cloud nodes and CLM network interfaces are configured.
          </p></li>
      </ol>
    </section>
    <section id="conref-hdeploy">
      <title>Deploy HPE Helion OpenStack</title>
      <ol id="ol_jxp_dnf_zt">
        <li>Use the following command to deploy the HPE Helion OpenStack cloud:
            <codeblock>hlm deploy –c &lt;cloudname&gt;</codeblock><p>This command takes a
            significant period of time. When this command completes without errors or warnings, the
            non-KVM cloud installation is complete. Use the following sections to configure the
            Horizon interface and configures virtual networking.</p><p><image
              href="../../../media/carrier.grade.docs/2.1/carrier-grade-install-deploy.png"
              width="400" id="image_hf1_2t1_t5"/>
          </p></li>
        <li>Enter <codeph>exit</codeph> to leave the root shell.</li>
      </ol>
    </section>
    <section
      conref="../sacramento/CGH-2-install-sacramento.dita#topic10581c2is/conref-ldap-keystone"
      id="ldap3"/>
    <section id="next-step">
      <title>Next Step</title>
      <p><xref href="carrier-grade-install-launch-horizon-denver.dita#topic10581cgilhd">Launching
          the Horizon Interface</xref></p>
    </section>
  </body>
</topic>
