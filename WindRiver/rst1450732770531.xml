<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept-wr PUBLIC "-//WindRiver.com//DTD DITA 1.2 Wind River Concept//EN" "concept-wr.dtd">
<concept-wr id="rst1450732770531" xml:lang="en-us">
<!-- Modification History

 -->
 <title ixia_locid="1">Configuring Instances at Boot Time</title>
 <shortdesc ixia_locid="2">Boot configuration user data can be passed to a virtual machine during
  startup. </shortdesc>
 <prolog>
  <author ixia_locid="3">Ron Stone</author>
 </prolog>
 <conbody>
  <p ixia_locid="5"><draft-comment author="rstone" ixia_locid="4">CGTS-1548 adds
    topic</draft-comment>For example, an Element Management System (EMS) may be used in cloud
   environments for VM configuration, but the VM may require some bootstrap information to
   successfully communicate with the EMS. </p>
  <p ixia_locid="6">Titanium Server provides three mechanisms to accomplish this:</p>
  <dl>
   <dlentry ixia_locid="7">
    <dt ixia_locid="8"><term ixia_locid="9">User Data</term></dt>
    <dd ixia_locid="10">
     <p ixia_locid="11">This is a mechanism for passing a local file to an instance when it is
      launched. This method is typically used to pass a shell script or configuration file.</p>
     <p ixia_locid="12">To send user data when calling nova boot, use the <option ixia_locid="13">--user-data</option>
      <filepath ixia_locid="14">/path/to/filename</filepath> option, or use the Heat service and set
      the <parmname ixia_locid="15">user_data</parmname> property and <parmname ixia_locid="16">user_data_format</parmname> to <option ixia_locid="90">RAW</option>. </p>
     <p ixia_locid="17">On initialization, the VM queries the metadata service through either the
      EC2 compatability API. For example:</p>
     <codeblock ixia_locid="22"><systemoutput ixia_locid="23">$ </systemoutput><userinput ixia_locid="24">curl http://169.254.169.254/openstack/2012-08-10/user_data</userinput></codeblock>
     <p ixia_locid="21">or the OpenStack metadata API. For example:</p>
     <codeblock ixia_locid="18"><systemoutput ixia_locid="19">$ </systemoutput><userinput ixia_locid="20">curl http://169.254.169.254/2009-04-04/user-data</userinput></codeblock>
     <p ixia_locid="25">In either case, text is returned to the VM and can be used for bootstrap
      configuration.</p>
     <p ixia_locid="26">Access to the metadata server at 169.254.169.254 is provided by a virtual
      router attached to the tenant network on which the access request is made. Virtual routers are
      automatically configured as proxies to the metadata service.</p>
     <p ixia_locid="27">The following requirements must be satisfied in order for a guest application to access the
      metadata service:</p>
     <ul id="ul_k5l_gvj_k5">
      <li ixia_locid="28">
       <p ixia_locid="29">There must be a route table entry to route traffic to the 169.254.169.254
        address using a Neutron router, or using a suitable static route to the 169.254.169.254
        address. </p>
      </li>
      <li ixia_locid="30">
       <p ixia_locid="31">The metadata server must know about the virtual machine instance
        associated with the MAC and IP addresses of the virtual Ethernet interface issuing the
        metadata service request. This is necessary for the metadata server to validate the request
        and identify the correct data to return to the VM.</p>
      </li>
     </ul>
     <p ixia_locid="32">On system managed subnets, the Neutron service has all address information associated with
      the virtual machines in its database.</p>
     <p ixia_locid="33">On unmanaged subnets, you must tell the Neutron service the IP address of
      the network interface issuing the metadata service requests. This can only be done using the
      command line or API interfaces when instantiating the virtual machine. For example:</p>
     <codeblock ixia_locid="34"><systemoutput ixia_locid="103">$ </systemoutput><userinput ixia_locid="104">nova boot \
--nic net-id=net-uuid,vif-model=avp,v4-fixed-ip=172.18.0.1 \
my-new-vm</userinput></codeblock>
     <p ixia_locid="105">In this simple example, the option <option ixia_locid="106">v4-fixed-ip</option> tells Neutron the IP address
      for this interface. The interfaceâ€™s MAC address is automatically generated by Nova. </p>
    </dd>
   </dlentry>
   <dlentry ixia_locid="107">
    <dt ixia_locid="108"><term ixia_locid="109">cloud-init</term></dt>
    <dd ixia_locid="42">
     <p ixia_locid="43">This is an open-source package available from <xref format="html" href="https://cloudinit.readthedocs.org/en/latest/" ixia_locid="44" scope="external">https://cloudinit.readthedocs.org/en/latest/</xref> that supports a variety of guests. It
      expects a particular file format for user data, retrieves the user data from the metadata
      server, and takes action based on the contents of the data.</p>
     <p ixia_locid="45">Two commonly used input formats are:</p>
     <dl>
      <dlentry ixia_locid="46">
       <dt ixia_locid="47"><term ixia_locid="48">shell scripts</term></dt>
       <dd ixia_locid="49">
        <p ixia_locid="50">You can configure an instance at boot time by passing a shell script as
         user data. The script file must begin with<codeblock ixia_locid="51">#!</codeblock> for
          <nameliteral ixia_locid="91">cloud-init</nameliteral> to recognize it as a shell script.</p>
       </dd>
      </dlentry>
      <dlentry ixia_locid="52">
       <dt ixia_locid="53"><term ixia_locid="54">Cloud config files</term></dt>
       <dd ixia_locid="55">
        <p ixia_locid="56">A configuration format based on YAML that you can use to configure a
         large number of options on a system. For example, to set the hostname:</p>
        <codeblock ixia_locid="57">#cloud-config
hostname: mynode
fqdn: mynode.example.com
manage_etc_hosts: true</codeblock>
        <p ixia_locid="58">See <xref format="html" href="https://cloudinit.readthedocs.org/en/latest" ixia_locid="59" scope="external">https://cloudinit.readthedocs.org/en/latest</xref> for a complete list of
         capabilities.</p>
        <p ixia_locid="60">The following requirements must be satisfied in order for a guest application to access
         the metadata service:</p>
        <ul id="ul_qm3_1zj_k5">
         <li ixia_locid="61">
          <p ixia_locid="62">There must be a route table entry to route traffic to the
           169.254.169.254 address using a Neutron router, or using a suitable static route to the
           169.254.169.254 address.</p>
         </li>
         <li ixia_locid="63">
          <p ixia_locid="64">The metadata server must know about the virtual machine instance
           associated with the MAC and IP addresses of the virtual Ethernet interface issuing the
           metadata service request. This is necessary for the metadata server to validate the
           request and identify the correct data to return to the VM.</p>
         </li>
        </ul>
       </dd>
      </dlentry>
     </dl>
    </dd>
   </dlentry>
   <dlentry ixia_locid="65">
    <dt ixia_locid="66"><term ixia_locid="67">Config drive</term></dt>
    <dd ixia_locid="68">
     <p ixia_locid="69">Titanium Server can be configured to use a special-purpose configuration
      drive (abbreviated <term ixia_locid="92">config drive</term>) to store metadata (including injected files).
      Metadata is written to the drive, which is attached to the instance when it boots. The
      instance can retrieve information normally available through the metadata service by reading
      from the mounted drive.</p>
     <p ixia_locid="70">The config drive can be enabled by using the <option ixia_locid="71">--config-drive=true</option> option with nova boot. </p>
     <p ixia_locid="72">The following example enables the config drive and passes user data,
      injecting two files and two key/value metadata pairs. These can be read from the config
      drive.</p>
     <codeblock ixia_locid="73"><systemoutput ixia_locid="74">$ </systemoutput><userinput ixia_locid="75">nova boot --config-drive=true --image my-image-name --key-name mykey \
--flavor 1 --user-data ./my-user-data.txt myinstance \
--file /etc/network/interfaces=/home/myuser/instance-interfaces --file known_hosts=/home/myuser/.ssh/known_hosts \
--meta role=webservers --meta essential=false</userinput></codeblock>
     <p ixia_locid="76">From within the instance, the config drive volume is labeled <nameliteral ixia_locid="93">config-2</nameliteral>. You can mount the config drive as the <filepath ixia_locid="77">/dev/disk/by-label/config-2</filepath> device if your guest OS supports
      accessing disks by label. For example:</p>
     <codeblock ixia_locid="78"><systemoutput ixia_locid="79"># </systemoutput><userinput ixia_locid="80">mkdir -p /mnt/config</userinput>
<systemoutput ixia_locid="81"># </systemoutput><userinput ixia_locid="82">mount /dev/disk/by-label/config-2 /mnt/config</userinput></codeblock>
     <p ixia_locid="83">The contents of the config drive depend on the options passed to nova boot.
      The contents of the config drive for the example above are:</p>
     <codeblock ixia_locid="84">ec2/2009-04-04/meta-data.json
ec2/2009-04-04/user-data
ec2/latest/meta-data.json
ec2/latest/user-data
openstack/2012-08-10/meta_data.json
openstack/2012-08-10/user_data
openstack/content
openstack/content/0000
openstack/content/0001
openstack/latest/meta_data.json
openstack/latest/user_data</codeblock>
     <p ixia_locid="85">For file format details and full details on config-drive see <xref format="html" href="http://docs.openstack.org/user-guide/cli_config_drive.html" ixia_locid="86" scope="external">http://docs.openstack.org/user-guide/cli_config_drive.html</xref>.</p>
     <note id="note_N1016A_N10123_N1011A_N1002E_N1001C_N10001" ixia_locid="87" type="caution">
      <p ixia_locid="88">If a VM uses config-drive for user data or file injection, VM evacuations
       due to a compute node failure and VM live migrations to another compute node will cause the
       config drive to be rebuilt on the new compute node and metadata to be populated, but user
       data and injected files are not populated in the evacuated or live-migrated config drive of
       the VM.</p>
      <p ixia_locid="89">For a VM using <nameliteral ixia_locid="94">config-file</nameliteral> with file injection,
       it is recommended to copy the injected files to the root disk of the VM on initial boot, and
       to set a flag to prevent the use of injected files on subsequent boots.</p>
     </note>
    </dd>
   </dlentry>
  </dl>
 </conbody>
 <related-links>
  <link href="jow1409240700100.xml" ixia_locid="110"/>
 </related-links>
</concept-wr>